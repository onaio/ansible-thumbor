# Thumbor imaging service config file (template created with Tumbor 6.4.1)
# See https://github.com/thumbor/thumbor/wiki/Configuration
# {{ ansible_managed }}


################################### Imaging ####################################

## Max width in pixels for images read or generated by thumbor
MAX_WIDTH = 5000

## Max height in pixels for images read or generated by thumbor
MAX_HEIGHT = 5000

## Max pixel count for images read by thumbor
MAX_PIXELS = 75000000

## Min width in pixels for images read or generated by thumbor
MIN_WIDTH = 2

## Min width in pixels for images read or generated by thumbor
MIN_HEIGHT = 2

## Allowed domains for the http loader to download. These are regular
## expressions.
ALLOWED_SOURCES = ['{{ thumbor_allowed_sources|join("', '") }}']

## Quality index used for generated JPEG images
QUALITY = 80

## Compression level for generated PNG images.
PNG_COMPRESSION_LEVEL = 6

## Max AGE sent as a header for the image served by thumbor in seconds
MAX_AGE = 60 * 60 * {{ thumbor_client_side_cache_duration }}

## Indicates the Max AGE header in seconds for temporary images (images with
## failed smart detection)
MAX_AGE_TEMP_IMAGE = 0

## Indicates whether thumbor should rotate images that have an Orientation EXIF
## header
RESPECT_ORIENTATION = True

## Ignore errors during smart detections and return image as a temp image (not
## saved in result storage and with MAX_AGE_TEMP_IMAGE age)
## Defaults to: False
#IGNORE_SMART_ERRORS = False

## Sends If-Modified-Since & Last-Modified headers; requires support from result
## storage
SEND_IF_MODIFIED_LAST_MODIFIED_HEADERS = False

## Preserves exif information in generated images. Increases image size in
## kbytes, use with caution.
PRESERVE_EXIF_INFO = False

## Indicates whether thumbor should enable the EXPERIMENTAL support for animated
## gifs.
ALLOW_ANIMATED_GIFS = True

## Indicates whether thumbor should use gifsicle engine. Please note that smart
## cropping and filters are not supported for gifs using gifsicle (but won't
## give an error).
USE_GIFSICLE_ENGINE = False

## Indicates whether thumbor should enable blacklist functionality to prevent
## processing certain images.
USE_BLACKLIST = False

## Size of the thread pool used for image transformations.  The default value is
## 0 (don't use a threadpoool. Increase this if you are seeing your IOLoop
## getting blocked (often indicated by your upstream HTTP requests timing out)
ENGINE_THREADPOOL_SIZE = 0


################################# Extensibility #################################

## The metrics backend thumbor should use to measure internal actions. This must
## be the full name of a python module (python must be able to import it)
METRICS = 'thumbor.metrics.logger_metrics'

## The loader thumbor should use to load the original image. This must be the
## full name of a python module (python must be able to import it)
LOADER = 'thumbor.loaders.http_loader'

## The file storage thumbor should use to store original images. This must be the
## full name of a python module (python must be able to import it)
STORAGE = 'thumbor.storages.file_storage'

## The result storage thumbor should use to store generated images. This must be
## the full name of a python module (python must be able to import it)
#RESULT_STORAGE = 'tc_aws.result_storages.s3_storage'

## The imaging engine thumbor should use to perform image operations. This must
## be the full name of a python module (python must be able to import it)
ENGINE = 'thumbor.engines.pil'

## The gif engine thumbor should use to perform image operations. This must be
## the full name of a python module (python must be able to import it)
GIF_ENGINE = 'thumbor.engines.gif'

## The url signer thumbor should use to verify url signatures.This must be the
## full name of a python module (python must be able to import it)
URL_SIGNER = 'libthumbor.url_signers.base64_hmac_sha1'


################################### Security ###################################

## The security key thumbor uses to sign image URLs
SECURITY_KEY = '{{ thumbor_signing_key }}'

## Indicates if the /unsafe URL should be available
ALLOW_UNSAFE_URL = {{ thumbor_allow_unsafe_url }}

## Indicates if encrypted (old style) URLs should be allowed
ALLOW_OLD_URLS = True


################################# HTTP Loader ##################################

## The maximum number of seconds libcurl can take to connect to an image being
## loaded
HTTP_LOADER_CONNECT_TIMEOUT = 5

## The maximum number of seconds libcurl can take to download an image
HTTP_LOADER_REQUEST_TIMEOUT = 25

## Indicates whether libcurl should follow redirects when downloading an image
HTTP_LOADER_FOLLOW_REDIRECTS = True

## Indicates the number of redirects libcurl should follow when downloading an
## image
HTTP_LOADER_MAX_REDIRECTS = 5

## The maximum number of simultaneous HTTP connections the loader can make before
## queuing
HTTP_LOADER_MAX_CLIENTS = 15

## Indicates whether thumbor should forward the user agent of the requesting user
HTTP_LOADER_FORWARD_USER_AGENT = False

## Indicates whether thumbor should forward the headers of the request
HTTP_LOADER_FORWARD_ALL_HEADERS = False

## Default user agent for thumbor http loader requests
HTTP_LOADER_DEFAULT_USER_AGENT = 'Thumbor/6.4.1'

## If the CurlAsyncHTTPClient should be used
HTTP_LOADER_CURL_ASYNC_HTTP_CLIENT = True

################################# File Storage #################################

## Expiration in seconds for the images in the File Storage. Defaults to one
## month
STORAGE_EXPIRATION_SECONDS = 60 * 60 * {{ thumbor_storage_expiration }}

## Indicates whether thumbor should store the signing key for each image in the
## file storage. This allows the key to be changed and old images to still be
## properly found
STORES_CRYPTO_KEY_FOR_EACH_IMAGE = True

## The root path where the File Storage will try to find images
FILE_STORAGE_ROOT_PATH = '{{ thumbor_storage_path }}'


#################################### Upload ####################################

## Indicates whether thumbor should enable File uploads
UPLOAD_ENABLED = False


################################ Result Storage ################################

## AC_AWS result storage plugin settings:

# S3 bucket for result storage
TC_AWS_RESULT_STORAGE_BUCKET = '{{ thumbor_result_storage_bucket }}'

# S3 region for resulst storage bucket
TC_AWS_REGION = '{{ s3_aws_region }}'

# S3 path prefix for Result storage bucket
TC_AWS_RESULT_STORAGE_ROOT_PATH = '{{ thumbor_result_storage_path }}'

# Max retries for get image from S3 Bucket
TC_AWS_MAX_RETRY = 0

# Store result with metadata (for instance content-type)
TC_AWS_STORE_METADATA = False

## Expiration in seconds of generated images in the result storage
RESULT_STORAGE_EXPIRATION_SECONDS = 60 * 60 * {{ thumbor_result_storage_expiration }}

## Path where the Result storage will store generated images
# (should not be used as we use tc_aws)
RESULT_STORAGE_FILE_STORAGE_ROOT_PATH = '{{ thumbor_storage_path }}'

## Indicates whether unsafe requests should also be stored in the Result Storage
RESULT_STORAGE_STORES_UNSAFE = False


################################### Metrics ####################################

## Host to send statsd instrumentation to
{% if thumbor_statsd_host is defined %}
STATSD_HOST = '{{ thumbor_statsd_host }}'
{% else %}
STATSD_HOST = None
{% endif %}

## Port to send statsd instrumentation to
STATSD_PORT = {{ thumbor_statsd_port }}

## Prefix for statsd
STATSD_PREFIX = 'thumbor'

